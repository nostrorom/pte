import type { Song, Channel } from '$lib/types';
import { カ, ソレ, ツ, ド, ホ, ヨ, _ as p } from '$lib';

const __ = [p(2)];
const ___ = [p(5)];

const r: Channel = 'R';
const l: Channel = 'L';

const ヨ_ホ = [ヨ(), ホ()];

const ツ_ク = [ツ('R', 0.5), ツ(l, 0.5)];
const ド_ツ_ク = [ド(r), ...ツ_ク];

const ツ_ド = [ツ(r, 0.5), ド(l, 0.5, 70)];

const カ_ラ_カ = [カ(l, 0.5), カ(r, 0.5), カ(l, 0.5)];

const part1: Song = [
	[ヨ_ホ],
	[[ド(r)], ツ_ク, ツ_ク, [ド(r, 1, 80), ド(r)], ツ_ク, ツ_ク, [ド(r, 1, 80)]],
	[[ド(r)], ツ_ク, ツ_ク, [ド(r, 1, 80), ド(r)], ツ_ク, ツ_ク, [ド(r, 1, 80)]],
	[[ド(r)], ツ_ド, ツ_ド, [ド(r, 1, 80), ド(r)], ツ_ド, ツ_ク, [ド(r, 1, 80)]],
	[[ド(r)], ツ_ド, ツ_ド, [ド(r, 1, 80), ド(r)], ツ_ド, ツ_ク, [ド(r, 1, 80)]],
	[[ド(r)], ツ_ド, ツ_ド, [ド(r, 1, 80), ド(r)], ツ_ド, ツ_ク, [ド(r, 1, 80)]],
	[[ド(r)], ツ_ド, ツ_ド, [ド(r, 1, 80), ド(r)], ツ_ド, ツ_ク, [ド(r, 0.5, 80), ド(l, 0.5, 90)]],
	[ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, [ド(r), ド(l)]],
	[ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, [ド(r), ド(l)]],
	[ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, [ド(r), ド(l)]],
	[[ド(r)], ツ_ク, ツ_ク, [ド(r), ソレ(), ド(l)], ツ_ク, ツ_ク, [ド(r), ソレ()]],
	[[ド(l)], ツ_ク, ツ_ク, [ド(r), ソレ(), ド(l)], ツ_ク, ツ_ク, [ド(r)]],
	[[ド(r, 0.5)], カ_ラ_カ, [ド(r, 0.5)], カ_ラ_カ],
	[[ド(r)], __, [ド(r)]],
	[[ド(l)], __, [ド(r)]],
	[[ド(l)], __, [ド(r)]],
	[[ド(l)], __, [ド(r)]],
	[[ド(r, 0.5)], カ_ラ_カ, [ド(r, 0.5)], カ_ラ_カ],
	[[ド(r)], __, [ド(r)]],
	[[ド(l)], __, [ド(r)]],
	[[ド(l)], __, [ド(r)]],
	[[ド(l)], __, [ド(r, 0.5), ド(l, 0.5)]],
	[ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, [ド(r), ド(l)]],
	[ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, [ド(r), ド(l)]],
	[[ツ(r, 2), ツ(l, 2), ツ(r, 2), ツ(l, 1), ド(l)]],
	[[ツ(r, 2), ツ(l, 2), ツ(r, 2), ツ(l, 1), ド(l)]],
	[__, [ド(r)], ___, [ド(r), ド(l)]],
	[__, [ド(r)], ___, [ド(r), ド(l)]],
	[ド_ツ_ク, ド_ツ_ク, ド_ツ_ク, [ド(r), ド(l)]],
];

const part3: Song = [
	[[ド(r)], ツ_ク, [ド(r)], ツ_ク, [ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)], ツ_ク, ツ_ク, [ド(r)]],
	[[ド(r)], ツ_ク, [ド(r)], ツ_ク, [ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r)], ツ_ク, [ド(r)], ツ_ク, [ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r, 0.5), ド(l, 0.5), ホ()]],
	[[ド(r)], ツ_ク, [ド(r)], ツ_ク, [ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)], ツ_ク, ツ_ク, [ド(r)]],
	[[ド(r)], ツ_ク, [ド(r)], ツ_ク, [ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r)], ツ_ク, [ド(r)], ツ_ク, [ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r, 0.5, 120), ド(l, 0.5, 130)]],
];

const part2: Song = [
	[[ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	[
		ツ_ド,
		ツ_ド,
		[ド(r, 0.5), ド(l, 0.5, 80), ド(r)],
		ツ_ド,
		ツ_ク,
		[ド(r, 0.5), ド(l, 0.5, 80), ド(r)],
	],
	[
		ツ_ド,
		ツ_ド,
		[ド(r, 0.5), ド(l, 0.5, 80), ド(r)],
		ツ_ド,
		ツ_ク,
		[ド(r, 0.5), ド(l, 0.5, 80), ド(r)],
	],
	[ツ_ド, ツ_ド, [ド(r), ド(r)], ツ_ド, ツ_ク, [ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	[ツ_ド, ツ_ド, [ド(r), ド(r)], ツ_ド, ツ_ク, [ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	[ツ_ク, [ド(r), ホ(), ド(l), ホ(), ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r), ド(l)]],
	[ツ_ク, [ド(r), ホ(), ド(l), ホ(), ド(r)]],
	[ツ_ク, [ド(r), ホ(), ド(l), ホ(), ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r), ド(l)], ツ_ク, [ド(r), ホ(), ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	[ツ_ド, ツ_ド, [ド(r), ド(r)], ツ_ド, ツ_ク, [ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	[ツ_ド, ツ_ド, [ド(r), ド(r)], ツ_ド, ツ_ク, [ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	[ツ_ク, [ド(r), ホ(), ド(l), ホ(), ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r), ド(l)]],
	[ツ_ク, [ド(r), ホ(), ド(l), ホ(), ド(r)]],
	[ツ_ク, [ド(r), ホ(), ド(l), ホ(), ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r), ド(l)], ツ_ク, [ド(r), ホ(), ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	[ツ_ド, ツ_ド, [ド(r), ド(r)], ツ_ド, ツ_ク, [ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	[ツ_ド, ツ_ド, [ド(r), ド(r)], ツ_ド, ツ_ク, [ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	[ツ_ク, [ド(r), ホ(), ド(l), ホ(), ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r), ド(l)]],
	[ツ_ク, [ド(r), ホ(), ド(l), ホ(), ド(r)]],
	[ツ_ク, [ド(r), ホ(), ド(l), ホ(), ド(r, 0.5), ド(l, 0.5)], ツ_ク, [ド(r)]],
	[ツ_ク, [ド(r), ド(l)], ツ_ク, [ド(r), ホ(), ド(r, 0.5), ド(l, 0.5, 80), ド(r)]],
	...part3,
];

export default { part1, part2, part3 };
